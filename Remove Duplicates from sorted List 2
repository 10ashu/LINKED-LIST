/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        
        // map<int,int> mp;
        // ListNode* temp=head;
        // while(temp!=NULL)
        // {
        //     mp[temp->val]++;
        //     temp=temp->next;

        // }
        // ListNode* temp1=NULL,tail=NULL;
        // for( auto i: mp)
        // {
        //     if(i.second==1)
        //     {
        //         ListNode* v=new ListNode(i.first);
        //         if(temp1==NULL)
        //         {   
        //             temp1=v;
        //             tail=v;
        //         }
        //         else
        //         {
        //              tail->next=v;
        //              tail=v;
        //         }
        //     }
        // }
        // return temp1;
        ListNode* dummy=new ListNode(-1,head);
        ListNode* pre=dummy;
        while(head!=NULL)
        {
            if(head->next!=NULL&&head->val==head->next->val)
            {
                while((head->next!=NULL)&&(head->val==head->next->val))
                {
                    head=head->next;
                }
                
                pre->next=head->next;
            }
            else
            {
                pre=pre->next;
            }
            head=head->next;
        }
        return dummy->next;
    }
};
